<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.yangdaowan</groupId>
	<artifactId>surfear-toolkit</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>

	<name>surfear toolkit</name>
	<description>提供统一的版本管理、依赖管理、构建管理</description>
	<url>https://github.com/yangdaowan/surfear-toolkit</url>

	<licenses>
		<license>
			<name>Apache-2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/yangdaowan/surfear-toolkit</url>
		<connection>scm:git:git://github.com/yangdaowan/surfear-toolkit.git</connection>
	</scm>
	<developers>
		<developer>
			<name>yangdaowan</name>
			<email>512934216@qq.com</email>
		</developer>
	</developers>

	<modules>
		<module>surfear-core</module>
		<module>surfear-channel</module>
		<module>surfear-message-all</module>
		<module>surfear-spring-boot-starter</module>
	</modules>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<properties>
		<!-- base -->
		<revision>1.0.0</revision>
<!--		<revision>1.0.0-SNAPSHOT</revision>-->
		<main.basedir>${basedir}</main.basedir>

		<!--Maven-->
		<skipTests>true</skipTests>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!--java 版本-->
		<java.version>1.8</java.version>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>
		<!--project 版本-->
		<project.encoding>UTF-8</project.encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!--日志：slf4j + logback-->
		<slf4j.version>1.7.36</slf4j.version>
		<logback.version>1.2.11</logback.version>
		<!--测试：JUnit5 + Mockito-->
		<junit.version>5.9.2</junit.version>
		<mockito.version>4.11.0</mockito.version>
		<!--基础-->
		<lombok.version>1.18.38</lombok.version>
		<fastjson.version>2.0.43</fastjson.version>
		<configuration2.version>2.12.0</configuration2.version>
		<yaml.version>1.33</yaml.version>
		<autoservice.version>1.1.1</autoservice.version>
		<thymeleaf.version>3.0.15.RELEASE</thymeleaf.version>
		<!--必要-->
		<netty.version>4.1.77.Final</netty.version>
		<mail.version>1.6.2</mail.version>
		<okhttp.version>4.12.0</okhttp.version>
		<!--高级支持-->
		<resilience4j.version>1.7.1</resilience4j.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- SLF4J API -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- Logback 实现 -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<!-- JUnit 5 -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Mockito -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<!-- JSON处理 -->
			<dependency>
				<groupId>com.alibaba.fastjson2</groupId>
				<artifactId>fastjson2</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- 配置合并 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>${configuration2.version}</version>
			</dependency>
			<!-- yaml格式 -->
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${yaml.version}</version>
			</dependency>
			<!-- SPI文件自动生成 -->
			<dependency>
				<groupId>com.google.auto.service</groupId>
				<artifactId>auto-service</artifactId>
				<version>${autoservice.version}</version>
			</dependency>
			<!-- thymeleaf -->
			<dependency>
				<groupId>org.thymeleaf</groupId>
				<artifactId>thymeleaf</artifactId>
				<version>${thymeleaf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Netty 核心依赖 -->
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<!-- 邮件 -->
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>javax.mail</artifactId>
				<version>${mail.version}</version>
			</dependency>
			<!-- okhttp -->
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${okhttp.version}</version>
			</dependency>

			<!-- resilience4j 断路器-->
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-circuitbreaker</artifactId>
				<version>${resilience4j.version}</version>
			</dependency>
			<!-- resilience4j 限流器-->
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-ratelimiter</artifactId>
				<version>${resilience4j.version}</version>
			</dependency>
			<!-- resilience4j 重试策略-->
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-retry</artifactId>
				<version>${resilience4j.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
	</dependencies>

	<build>
		<plugins>
			<!-- 确保使用 JUnit 5 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
			</plugin>
			<!-- 资源预处理 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- maven发布 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.1.4</version>
			</plugin>
			<!--   central发布插件    -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.4.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>ossrh</publishingServerId>
                    <tokenAuth>true</tokenAuth>
                </configuration>
            </plugin>
			<!-- 源码和Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.4.1</version>
				<configuration>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <additionalJOption>-Xdoclint:none</additionalJOption>
                </configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- GPG签名 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
    			<version>1.6</version>
                <configuration>
                     <!--指定 GPG 执行程序的路径-->
                    <executable>E:\Tool\GnuPG\bin\gpg.exe</executable>
                     <!--指定用于签名的 GPG 密钥名称。-->
                    <keyname>io.github.yangdaowan</keyname>
                </configuration>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 合规化pom -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>1.2.7</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
